{"version":3,"sources":["webpack:///src/app/services/produto.service.ts","webpack:///src/app/models/user.ts","webpack:///src/app/models/pedido.ts","webpack:///src/app/services/services.module.ts","webpack:///src/app/services/alert.service.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/helpers/jwt-interceptor.ts","webpack:///src/app/services/pedido.service.ts","webpack:///src/app/produtos/produtos.component.ts","webpack:///src/app/produtos/produtos.component.html","webpack:///src/app/helpers/error-interceptor.ts","webpack:///src/app/components/alert/alert.component.html","webpack:///src/app/components/alert/alert.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/helpers/auth-guard.ts","webpack:///src/app/models/pedido-item.model.ts","webpack:///src/app/app.module.ts","webpack:///src/app/services/cliente-service.service.ts","webpack:///src/app/services/authentication.service.ts","webpack:///src/app/services/condicao-pagamento.service.ts","webpack:///src/app/services/tabela-de-preco.service.ts","webpack:///src/app/sidebar-menu/sidebar-menu.component.ts","webpack:///src/app/sidebar-menu/sidebar-menu.component.html","webpack:///src/app/pedidos-listagem/pedidos-listagem.component.html","webpack:///src/app/pedidos-listagem/pedidos-listagem.component.ts","webpack:///src/app/topbar-menu/topbar-menu.component.ts","webpack:///src/app/topbar-menu/topbar-menu.component.html","webpack:///src/app/helpers/fake-backend-interceptor.ts","webpack:///src/app/services/desconto.service.ts","webpack:///src/app/pedidos/pedidos.component.ts","webpack:///src/app/pedidos/pedidos.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/services/transportadora.service.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["ProdutoService","http","doc","undefined","get","apiUrl","item","post","pedido","idItem","idPedido","User","Pedido","ServicesModule","AlertService","router","subject","keepAfterRouteChange","events","subscribe","event","clear","asObservable","message","next","type","text","HomeComponent","environment","production","JwtInterceptor","authenticationService","request","currentUser","currentUserValue","token","clone","setHeaders","Authorization","handle","PedidoService","ProdutosComponent","ErrorInterceptor","pipe","err","status","logout","location","reload","error","statusText","AlertComponent","alertService","subscription","getAlert","cssClass","unsubscribe","AppComponent","x","AuthGuard","route","state","navigate","queryParams","returnUrl","url","PedidoItem","AppModule","provide","useClass","multi","forRoot","ClienteServiceService","AuthenticationService","currentUserSubject","JSON","parse","localStorage","getItem","value","username","password","user","setItem","stringify","removeItem","CondicaoPagamentoService","TabelaDePrecoService","id","SidebarMenuComponent","PedidosListagemComponent","pedidoService","listaPedidos","buscarPedidos","res","TopbarMenuComponent","click","e","preventDefault","toggleClass","then","window","users","push","FakeBackendInterceptor","method","headers","body","handleRoute","endsWith","authenticate","register","getUsers","match","deleteUser","find","ok","firstName","lastName","length","Math","max","map","isLoggedIn","unauthorized","filter","idFromUrl","urlParts","split","parseInt","fakeBackendProvider","DescontoService","modalRef","PedidosComponent","clienteService","transportadoraService","descontoService","tabelaService","modalService","produtoService","localeService","cgcCliente","razaoCliente","cgcTransportadora","razaoTransportadora","descricaoCondicaoPagamento","codigoCondicaoPagamento","descricaoDesconto","codigoDesconto","descricaoTabela","codigoTabela","produto","buscaCliente","buscaTransportadora","buscaCondPagto","buscaDesconto","buscaTabela","buscaProduto","valorDesconto","valorFrete","dataBaseVencimento","dataEntrega","numeroOC","observacoes","valorTotal","listaClientes","listaTransportadoras","listaCondPagto","listaDesconto","listaTabela","listaProdutos","listaItensPedido","use","codigoVendedor","buscarItensPedido","buscarDocumentoPorFantasia","console","log","buscarPorDescricao","buscaPorId","cliente","cgc","razao","transportadora","idTransportadora","codigo","cond","descricao","desconto","codigo_desconto","descricao_desconto","tabela","salvarPedido","idpedido","alert","pedidoItem","codigoProduto","quantidade","Number","document","getElementById","salvarItemPedido","apagaItemPedido","template","config","show","openModal","routes","path","component","canActivate","redirectTo","AppRoutingModule","LoginComponent","formBuilder","loading","submitted","loginForm","group","required","snapshot","controls","invalid","login","f","data","onSubmit","TransportadoraService","bootstrapModule","webpackEmptyAsyncContext","req","Promise","resolve","Error","code","keys","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { PedidoItem } from '../models/pedido-item.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProdutoService {\n\n  constructor(private http: HttpClient) { }\n\n  buscarPorDescricao(doc: string) {\n    if(doc == null || doc == undefined || doc == '') {\n      return this.http.get(`${environment.apiUrl}/produto`);\n    }\n    return this.http.get(`${environment.apiUrl}/produto?produto=${doc}`);\n  }\n\n  salvarItemPedido(item: PedidoItem) {\n    //const headers = { 'Authorization': 'Bearer my-token', 'My-Custom-Header': 'foobar' };\n    return this.http.post(`${environment.apiUrl}/produto`, item);\n  }\n\n  listaItensPedido(pedido: string) {\n    return this.http.get(`${environment.apiUrl}/listaitens?pedido=${pedido}`);\n  }\n\n  apagaItemPedido(idItem: string, idPedido: number) {\n    return this.http.delete(`${environment.apiUrl}/produto?produto=${idItem}&pedido=${idPedido}`);\n  }\n\n}\n","export class User {\n\n    id: number;\n    username: string;\n    password: string;\n    firstName: string;\n    lastName: string;\n    token: string;\n\n}\n","export class Pedido {\n\n    cgcCliente: string;\n    idTransportadora: number;\n    codigoCondicaoPagamento: number;\n    codigoVendedor: number;\n    codigoTabela: number;\n    codigoDesconto: number;\n    numeroOC: string;\n    dataEntrega: string;\n    dataBaseVencimento: string;\n    valorFrete: number;\n    valorDesconto: number;\n    observacoes: string;\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class ServicesModule { }\n","import { Injectable } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n\n  private subject = new Subject<any>();\n    private keepAfterRouteChange = false;\n\n    constructor(private router: Router) {\n        // clear alert messages on route change unless 'keepAfterRouteChange' flag is true\n        this.router.events.subscribe(event => {\n            if (event instanceof NavigationStart) {\n                if (this.keepAfterRouteChange) {\n                    // only keep for a single route change\n                    this.keepAfterRouteChange = false;\n                } else {\n                    // clear alert message\n                    this.clear();\n                }\n            }\n        });\n    }\n\n    getAlert(): Observable<any> {\n        return this.subject.asObservable();\n    }\n\n    success(message: string, keepAfterRouteChange = false) {\n        this.keepAfterRouteChange = keepAfterRouteChange;\n        this.subject.next({ type: 'success', text: message });\n    }\n\n    error(message: string, keepAfterRouteChange = false) {\n        this.keepAfterRouteChange = keepAfterRouteChange;\n        this.subject.next({ type: 'error', text: message });\n    }\n\n    clear() {\n        // clear by calling subject.next() without parameters\n        this.subject.next();\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid\">\n    <h1 class=\"h3 mb-2\">Dashboard</h1>\n\n    <p class=\"bemvindo\">Olá, <span>Usuário Open SyS</span>.</p>\n    <p>Selecione para onde você quer ir ao menu ao lado.</p>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://18.230.17.30:9091'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthenticationService) {}\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        // add authorization header with jwt token if available\n        let currentUser = this.authenticationService.currentUserValue;\n        if (currentUser && currentUser.token) {\n            request = request.clone({\n                setHeaders: { \n                    Authorization: `Bearer ${currentUser.token}`\n                }\n            });\n        }\n\n        return next.handle(request);\n    }\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PedidoService {\n\n  constructor(private http: HttpClient) { }\n\n  salvarPedido(pedido: any): any {\n    return this.http.post(`${environment.apiUrl}/pedido`, pedido);\n  }\n\n  buscarPedidos() {\n    return this.http.get(`${environment.apiUrl}/pedido`);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-produtos',\n  templateUrl: './produtos.component.html',\n  styleUrls: ['./produtos.component.css']\n})\nexport class ProdutosComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid\">\n    <h1 class=\"h3 mb-2\">Cadastrar novo produto</h1>\n\n    <div class=\"cadastrar-pedido mb-5\">\n        <form>\n            <label>Produto</label><br>\n            <input type=\"text\"><br>\n\n            <label>Imagem</label><br>\n            <input type=\"file\"><br>\n\n            <label>Observação</label><br>\n            <input type=\"text\"><br>\n\n            <label>Unidade</label><br>\n            <input type=\"text\"><br>\n\n            <label>Quantidade</label><br>\n            <input type=\"number\"><br>\n\n            <label>Preço</label><br>\n            <input type=\"number\"><br>\n\n            <label>Desconto item</label><br>\n            <input type=\"number\"><br>\n\n            <label>Total</label><br>\n            <input type=\"text\"><br>\n\n            <button class=\"btn-salvar\">Salvar item</button>\n        </form>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { AuthenticationService } from '../services/authentication.service';\n\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthenticationService) {}\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(catchError(err => {\n            if (err.status === 401) {\n                // auto logout if 401 response returned from api\n                this.authenticationService.logout();\n                location.reload(true);\n            }\n            \n            const error = err.error.message || err.statusText;\n            return throwError(error);\n        }))\n    }\n}","<div *ngIf=\"message\" [ngClass]=\"message.cssClass\">{{message.text}}</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AlertService } from 'src/app/services/alert.service';\n\n@Component({\n  selector: 'alert',\n  templateUrl: './alert.component.html',\n  styleUrls: ['./alert.component.css']\n})\nexport class AlertComponent implements OnInit, OnDestroy {\n\n  private subscription: Subscription;\n  message: any;\n\n  constructor(private alertService: AlertService) { }\n\n  ngOnInit() {\n      this.subscription = this.alertService.getAlert()\n          .subscribe(message => {\n              switch (message && message.type) {\n                  case 'success':\n                      message.cssClass = 'alert alert-success';\n                      break;\n                  case 'error':\n                      message.cssClass = 'alert alert-danger';\n                      break;\n              }\n\n              this.message = message;\n          });\n  }\n\n  ngOnDestroy() {\n      this.subscription.unsubscribe();\n  }\n\n}\n","<ng-container *ngIf=\"currentUser\">\n\n    <div class=\"d-flex\">\n\n        <app-sidebar-menu></app-sidebar-menu>\n    \n        <div id=\"page-content-wrapper\">\n    \n            <app-topbar-menu></app-topbar-menu>\n    \n            <alert></alert>\n    \n            <router-outlet></router-outlet>\n    \n        </div>\n    </div>\n\n</ng-container>\n\n<ng-container *ngIf=\"!currentUser\">\n\n    <router-outlet></router-outlet>\n    \n</ng-container>","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { User } from './models/user';\nimport { AuthenticationService } from './services/authentication.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  \n  currentUser: User;\n\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {\n    this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n  }\n\n  ngOnInit() {}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const currentUser = this.authenticationService.currentUserValue;\n        if (currentUser) {\n            // authorised so return true\n            return true;\n        }\n\n        // not logged in so redirect to login page with the return url\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url }});\n        return false;\n    }\n}","export class PedidoItem {\n    idPedido: string;\n    codigoProduto: string;\n    quantidade: number;\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { SidebarMenuComponent } from './sidebar-menu/sidebar-menu.component';\nimport { TopbarMenuComponent } from './topbar-menu/topbar-menu.component';\nimport { PedidosComponent } from './pedidos/pedidos.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AlertComponent } from './components/alert/alert.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { JwtInterceptor } from './helpers/jwt-interceptor';\nimport { ErrorInterceptor } from './helpers/error-interceptor';\nimport { fakeBackendProvider } from './helpers/fake-backend-interceptor';\nimport { ProdutosComponent } from './produtos/produtos.component';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { PedidosListagemComponent } from './pedidos-listagem/pedidos-listagem.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HomeComponent,\n    SidebarMenuComponent,\n    TopbarMenuComponent,\n    PedidosComponent,\n    AlertComponent,\n    ProdutosComponent,\n    PedidosListagemComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    ModalModule.forRoot(),\n    BrowserAnimationsModule,\n    BsDatepickerModule.forRoot(),\n  ], \n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n\n    // provider used to create fake backend\n    fakeBackendProvider\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClienteServiceService {\n\n  constructor(private http: HttpClient) { }\n\n  buscarDocumentoPorFantasia(doc: string) {\n    if(doc == null || doc == undefined || doc == ''){\n      return this.http.get(`${environment.apiUrl}/cliente`);\n    }\n    return this.http.get(`${environment.apiUrl}/cliente?fantasia=${doc}`);\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators'\nimport { User } from '../models/user';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  private currentUserSubject: BehaviorSubject<User>;\n    public currentUser: Observable<User>;\n\n    constructor(private http: HttpClient) {\n        this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\n        this.currentUser = this.currentUserSubject.asObservable();\n    }\n\n    public get currentUserValue(): User {\n        return this.currentUserSubject.value;\n    }\n\n    login(username, password) {\n        return this.http.post<any>(`${environment.apiUrl}/users/authenticate`, { username, password })\n            .pipe(map(user => {\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\n                localStorage.setItem('currentUser', JSON.stringify(user));\n                this.currentUserSubject.next(user);\n                return user;\n            }));\n    }\n\n    logout() {\n        // remove user from local storage and set current user to null\n        localStorage.removeItem('currentUser');\n        this.currentUserSubject.next(null);\n    }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CondicaoPagamentoService {\n\n  constructor(private http: HttpClient) { }\n\n  buscarPorDescricao(doc: string) {\n    if(doc == null || doc == undefined || doc == ''){\n      return this.http.get(`${environment.apiUrl}/condpagamento`);\n    }\n    return this.http.get(`${environment.apiUrl}/condpagamento?descricao=${doc}`);\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TabelaDePrecoService {\n\n  constructor(private http: HttpClient) { }\n\n  buscaPorId(id: number) {\n    if(id == null || id == undefined){\n      return this.http.get(`${environment.apiUrl}/tabela`);\n    }\n    return this.http.get(`${environment.apiUrl}/tabela?id=${id}`);\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar-menu',\n  templateUrl: './sidebar-menu.component.html',\n  styleUrls: ['./sidebar-menu.component.css']\n})\nexport class SidebarMenuComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"sidebar h-100\">\n    <div class=\"sidebar-heading\">\n        OpenSys\n    </div>\n    <hr class=\"sidebar-divider my-0\">\n    <div class=\"list-group list-group-flush\">\n        <a href=\"#\" class=\"nav-link\"><i class=\"fas fa-home active\"></i> Home</a>\n        <hr class=\"sidebar-divider my-0\">\n        <a [routerLink]=\"['pedidos']\" class=\"nav-link\"><i class=\"fas fa-file-alt\"></i> Novo pedido</a>\n        <hr class=\"sidebar-divider my-0\">\n        <a [routerLink]=\"['pedidos-listagem']\" class=\"nav-link\"><i class=\"fas fa-list\"></i> Lista de Pedidos</a>\n        <hr class=\"sidebar-divider my-0\">\n    </div>\n</div>","<div class=\"container-fluid\">\n    <h1 class=\"h3 mb-2\">Listagem de pedidos</h1>\n\n    <div class=\"row\">\n        <div class=\"table-responsive\">\n            <table class=\"table\">\n                <thead class=\"thead-dark\">\n                    <tr>\n                        <th scope=\"col\">#</th>\n                        <th scope=\"col\">CPF/CPNJ</th>\n                        <th scope=\"col\">Status</th>\n                        <th scope=\"col\">Data Emissão</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let pedido of listaPedidos\">\n                        <th>{{pedido.pedido}}</th>\n                        <td>{{pedido.cgc}}</td>\n                        <td>{{pedido.status}}</td>\n                        <td>{{pedido.dataemis_aprovacao}}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { PedidoService } from '../services/pedido.service';\n\n@Component({\n  selector: 'app-pedidos-listagem',\n  templateUrl: './pedidos-listagem.component.html',\n  styleUrls: ['./pedidos-listagem.component.css']\n})\nexport class PedidosListagemComponent implements OnInit {\n\n  listaPedidos: any = [];\n\n  constructor(private pedidoService: PedidoService) { }\n\n  ngOnInit(): void {\n    this.buscarPedidos();\n  }\n\n  buscarPedidos() {\n    this.pedidoService.buscarPedidos().subscribe(\n      res => {\n        this.listaPedidos = res;\n      },\n      error => {\n\n      }\n    );\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { User } from '../models/user';\nimport { AuthenticationService } from '../services/authentication.service';\nimport * as $ from 'jquery';\n\n@Component({\n  selector: 'app-topbar-menu',\n  templateUrl: './topbar-menu.component.html',\n  styleUrls: ['./topbar-menu.component.css']\n})\nexport class TopbarMenuComponent implements OnInit {\n\n  currentUser: User;\n\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {\n    this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n  }\n\n  ngOnInit() {\n    $(\"#menu-toggle\").click(function (e) {\n      e.preventDefault();\n      $(\"#wrapper\").toggleClass(\"toggled\");\n    });\n  }\n\n  logout() {\n    this.authenticationService.logout();\n    this.router.navigate(['/login']).then(() => {\n      window.location.reload();\n    });\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg mb-4 static-top shadow\">\n\n    <button class=\"btn btn-resposive\" id=\"menu-toggle\"><i class=\"fas fa-align-justify\"></i></button>\n\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbar\" aria-controls=\"navbar\"\n        aria-expanded=\"false\">\n        <i class=\"fas fa-user\"></i>\n    </button>\n\n    <div class=\"collapse navbar-collapse\" id=\"navbar\">\n        <ul class=\"navbar-nav ml-auto mt-2 mt-lg-0\">\n            <li class=\"nav-item dropdown\">\n                <a class=\"nav-link dropdown\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\"\n                    aria-haspopup=\"true\" aria-expanded=\"false\">\n                    <div class=\"username\">Manuela Eloá da Luz<img class=\"img-profile\"\n                            src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT8bkbf7xVfYojJRzTS2BM8iuWLnJPGs3Kjnw&usqp=CAU\">\n                    </div>\n                </a>\n                <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"navbarDropdown\">\n                    <a class=\"dropdown-item\" (click)=\"logout()\">Sair</a>\n                </div>\n            </li>\n        </ul>\n    </div>\n</nav>\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpInterceptor, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { delay, mergeMap, materialize, dematerialize } from 'rxjs/operators';\nimport { User } from '../models/user';\nimport { UseExistingWebDriver } from 'protractor/built/driverProviders';\n\n// array in local storage for registered users\nlet users = JSON.parse(localStorage.getItem('users')) || [];\nlet user = new User();\nuser.username = \"opensys\";\nuser.password = \"admin\";\nusers.push(user);\n\n@Injectable()\nexport class FakeBackendInterceptor implements HttpInterceptor {\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        const { url, method, headers, body } = request;\n\n        // wrap in delayed observable to simulate server api call\n        return of(null)\n            .pipe(mergeMap(handleRoute))\n            .pipe(materialize()) // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648)\n            .pipe(delay(500))\n            .pipe(dematerialize());\n\n        function handleRoute() {\n            switch (true) {\n                case url.endsWith('/users/authenticate') && method === 'POST':\n                    return authenticate();\n                case url.endsWith('/users/register') && method === 'POST':\n                    return register();\n                case url.endsWith('/users') && method === 'GET':\n                    return getUsers();\n                case url.match(/\\/users\\/\\d+$/) && method === 'DELETE':\n                    return deleteUser();\n                default:\n                    // pass through any requests not handled above\n                    return next.handle(request);\n            }    \n        }\n\n        // route functions\n\n        function authenticate() {\n            const { username, password } = body;\n            const user = users.find(x => x.username === username && x.password === password);\n            if (!user) return error('Username or password is incorrect');\n            return ok({\n                id: user.id,\n                username: user.username,\n                firstName: user.firstName,\n                lastName: user.lastName,\n                token: 'fake-jwt-token'\n            })\n        }\n\n        function register() {\n            const user = body\n\n            if (users.find(x => x.username === user.username)) {\n                return error('Username \"' + user.username + '\" is already taken')\n            }\n\n            user.id = users.length ? Math.max(...users.map(x => x.id)) + 1 : 1;\n            users.push(user);\n            localStorage.setItem('users', JSON.stringify(users));\n\n            return ok();\n        }\n\n        function getUsers() {\n            if (!isLoggedIn()) return unauthorized();\n            return ok(users);\n        }\n\n        function deleteUser() {\n            if (!isLoggedIn()) return unauthorized();\n\n            users = users.filter(x => x.id !== idFromUrl());\n            localStorage.setItem('users', JSON.stringify(users));\n            return ok();\n        }\n\n        // helper functions\n\n        function ok(body?) {\n            return of(new HttpResponse({ status: 200, body }))\n        }\n\n        function error(message) {\n            return throwError({ error: { message } });\n        }\n\n        function unauthorized() {\n            return throwError({ status: 401, error: { message: 'Unauthorised' } });\n        }\n\n        function isLoggedIn() {\n            return headers.get('Authorization') === 'Bearer fake-jwt-token';\n        }\n\n        function idFromUrl() {\n            const urlParts = url.split('/');\n            return parseInt(urlParts[urlParts.length - 1]);\n        }\n    }\n}\n\nexport const fakeBackendProvider = {\n    // use fake backend in place of Http service for backend-less development\n    provide: HTTP_INTERCEPTORS,\n    useClass: FakeBackendInterceptor,\n    multi: true\n};","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DescontoService {\n\n  constructor(private http: HttpClient) { }\n\n  buscarPorDescricao(doc: string) {\n    if(doc == null || doc == undefined || doc == '') {\n      return this.http.get(`${environment.apiUrl}/desconto`);\n    }\n    return this.http.get(`${environment.apiUrl}/desconto?descricao=${doc}`);\n  }\n  \n}\n","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { ClienteServiceService } from '../services/cliente-service.service';\nimport { CondicaoPagamentoService } from '../services/condicao-pagamento.service';\nimport { DescontoService } from '../services/desconto.service';\nimport { TabelaDePrecoService } from '../services/tabela-de-preco.service';\nimport { TransportadoraService } from '../services/transportadora.service';\nimport { BsModalService, BsModalRef, ModalOptions } from 'ngx-bootstrap/modal';\nimport { FormControl } from '@angular/forms';\nimport { ProdutoService } from '../services/produto.service';\nimport { Pedido } from '../models/pedido';\nimport { PedidoService } from '../services/pedido.service';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\nimport { PedidoItem } from '../models/pedido-item.model';\nimport { error } from 'selenium-webdriver';\nimport { BsLocaleService } from 'ngx-bootstrap/datepicker';\nimport { defineLocale } from 'ngx-bootstrap/chronos';\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\ndefineLocale('pt-br', ptBrLocale); \n\n@Component({\n  selector: 'app-pedidos',\n  templateUrl: './pedidos.component.html',\n  styleUrls: ['./pedidos.component.css']\n})\nexport class PedidosComponent implements OnInit {\n\n  cgcCliente: string = '';\n  razaoCliente: string = '';\n\n  cgcTransportadora: string = '';\n  razaoTransportadora: string = '';\n\n  descricaoCondicaoPagamento: string = '';\n  codigoCondicaoPagamento: string = '';\n\n  descricaoDesconto: string = '';\n  codigoDesconto: string = '';\n\n  descricaoTabela: string = '';\n  codigoTabela: string = '';\n\n  produto: any = null;\n  \n  modalRef: BsModalRef;\n\n  buscaCliente = new FormControl();\n  buscaTransportadora = new FormControl();\n  buscaCondPagto = new FormControl();\n  buscaDesconto = new FormControl();\n  buscaTabela = new FormControl();\n  buscaProduto = new FormControl();\n\n  valorDesconto = new FormControl();\n  valorFrete = new FormControl();\n  dataBaseVencimento = new FormControl();\n  dataEntrega = new FormControl();\n  numeroOC = new FormControl();\n  observacoes = new FormControl();\n  valorTotal = new FormControl();\n\n  listaClientes: any = [];\n  listaTransportadoras: any = [];\n  listaCondPagto: any = [];\n  listaDesconto: any = [];\n  listaTabela: any = [];\n\n  listaProdutos: any = [];\n  listaItensPedido: any = [];\n\n  pedido: Pedido = new Pedido();\n\n  idPedido = null;\n \n  constructor(\n    private clienteService: ClienteServiceService,\n    private transportadoraService: TransportadoraService,\n    private CondicaoPagamentoService: CondicaoPagamentoService,\n    private descontoService: DescontoService,\n    private tabelaService: TabelaDePrecoService,\n    private modalService: BsModalService,\n    private produtoService: ProdutoService,\n    private pedidoService: PedidoService,\n    private localeService: BsLocaleService\n  ) { \n    localeService.use('pt-br');\n  }\n\n  ngOnInit(): void {\n    this.pedido.codigoVendedor = 1;\n    this.buscarItensPedido();\n  }\n\n  buscarDocumentoCliente() {\n      this.clienteService.buscarDocumentoPorFantasia(this.buscaCliente.value).subscribe(\n        res => {\n          console.log(res);\n          this.listaClientes = res;\n        },\n        error => {\n          console.log(error)\n        }\n      );\n  }\n\n  buscarDocumentoTransportadora() {\n    this.transportadoraService.buscarDocumentoPorFantasia(this.buscaTransportadora.value).subscribe(\n      res => {\n        this.listaTransportadoras = res;\n      },\n      error => {\n        console.log(error)\n      }\n    );\n  }\n\n  buscarCondicaoPagamento() {\n    this.CondicaoPagamentoService.buscarPorDescricao(this.buscaCondPagto.value).subscribe(\n      res => {\n        this.listaCondPagto = res;\n      },\n      error => {\n        console.log(error)\n      }\n    );\n  }\n\n  buscarDesconto() {\n    this.descontoService.buscarPorDescricao(this.buscaDesconto.value).subscribe(\n      res => {\n        this.listaDesconto = res;\n      },\n      error => {\n        console.log(error)\n      }\n    );\n  }\n\n  buscarTabelaPreco() {\n    this.tabelaService.buscaPorId(this.buscaTabela.value).subscribe(\n      res => {\n        this.listaTabela = res;\n      },\n      error => {\n        console.log(error)\n      }\n    );\n  }\n\n  buscarProduto() {\n    this.produtoService.buscarPorDescricao(this.buscaProduto.value).subscribe(\n      res => {\n        this.listaProdutos = res;\n      },\n      error => {\n        console.log(error)\n      }\n    );\n  }\n\n  selecionarCliente(cliente) {\n    this.cgcCliente = cliente.cgc;\n    this.razaoCliente = cliente.razao;\n    this.pedido.cgcCliente = cliente.cgc;\n  }\n\n  selecionarTransportadora(transportadora) {\n    this.cgcTransportadora = transportadora.cgc;\n    this.razaoTransportadora = transportadora.razao;\n    this.pedido.idTransportadora = transportadora.codigo;\n  }\n\n  selecionarCondPagto(cond) {\n    this.codigoCondicaoPagamento = cond.codigo;\n    this.descricaoCondicaoPagamento = cond.descricao;\n    this.pedido.codigoCondicaoPagamento = cond.codigo;\n  }\n\n  selecionarDesconto(desconto) {\n    this.codigoDesconto = desconto.codigo_desconto;\n    this.descricaoDesconto = desconto.descricao_desconto;\n    this.pedido.codigoDesconto = desconto.codigo_desconto;\n  }\n\n  selecionarTabela(tabela) {\n    this.codigoTabela = tabela.id;\n    this.descricaoTabela = tabela.id;\n    this.pedido.codigoTabela = tabela.id;\n  }\n\n  selecionarProduto(produto) {\n    this.produto = produto;\n  }\n\n  salvarPedido() {\n    this.pedido.dataBaseVencimento = this.dataBaseVencimento.value;\n    this.pedido.dataEntrega = this.dataEntrega.value;\n    this.pedido.numeroOC = this.numeroOC.value;\n    this.pedido.observacoes = this.observacoes.value;\n    this.pedido.valorDesconto = this.valorDesconto.value;\n    this.pedido.valorFrete = this.valorFrete.value;\n\n    this.pedidoService.salvarPedido(this.pedido).subscribe(\n      res => {\n        this.idPedido = res[0].idpedido;\n        alert('Sucesso ao cadastrar pedido');\n      },\n      error => {\n        console.log(error)\n      }\n    );\n  }\n\n  salvarItemPedido(produto) {\n    let pedidoItem = new PedidoItem();\n    pedidoItem.idPedido = this.idPedido;\n    console.log(produto)\n    pedidoItem.codigoProduto = produto;\n    pedidoItem.quantidade = Number((<HTMLInputElement>document.getElementById(produto)).value);\n\n    this.produtoService.salvarItemPedido(pedidoItem).subscribe(\n      res => {\n        alert('Sucesso ao salvar item ao pedido!')\n        this.buscarItensPedido()\n      },\n      error => {\n        console.log(error)\n      }\n    );\n  }\n\n  buscarItensPedido() {\n    this.produtoService.listaItensPedido(this.idPedido).subscribe(\n      res => {\n        if(res != null) {\n          this.listaItensPedido = res;\n        } else {\n          this.listaItensPedido = [];\n        }\n      },\n      error => {\n        console.log(error)\n      }\n    );\n  }\n\n  apagarItemPedido(idItem: string) {\n    this.produtoService.apagaItemPedido(idItem, this.idPedido).subscribe(\n      res => {\n        alert('Produto excluído com sucesso')\n        this.buscarItensPedido();\n      },\n      error => {\n        alert('Erro ao excluir produto')\n        console.log(error)\n      }\n    );\n  }\n\n  openModal(template: TemplateRef<any>) {\n    const config: ModalOptions = { class: 'modal-lg' };\n    this.modalRef = this.modalService.show(template, config);\n  }\n\n}\n","<div class=\"container-fluid\">\n    <h1 class=\"h3 mb-2\">Cadastrar novo pedido</h1>\n\n    <div class=\"cadastrar-pedido\">\n        <form>\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n\n                    <label>Nro. Pedido:</label>\n                    <div class=\"input-group mb-3\">\n                        <input type=\"number\" class=\"form-control\" [value]=\"idPedido\" readonly placeholder=\"Inserido automaticamente...\">\n                    </div>\n\n                    <label>Cliente:</label>\n                    <div class=\"input-group mb-3\">\n                        <input class=\"form-control\" type=\"text\" [value]=\"razaoCliente\" readonly>\n                        <div class=\"input-group-append\">\n                            <button class=\"btn btn-primary\" type=\"button\" (click)=\"openModal(cliente)\">\n                                <i class=\"fas fa-search\"></i>\n                            </button>\n                        </div>\n                    </div>\n\n                    <label>Transportador:</label>\n                    <div class=\"input-group mb-3\">\n                        <input class=\"form-control\" type=\"text\" [value]=\"razaoTransportadora\" readonly>\n                        <div class=\"input-group-append\">\n                            <button type=\"button\" class=\"btn btn-primary\" (click)=\"openModal(transportadora)\">\n                                <i class=\"fas fa-search\"></i>\n                            </button>\n                        </div>\n                    </div>\n\n                    <label>Cond. de pagamento:</label>\n                    <div class=\"input-group mb-3\">\n                        <input class=\"form-control\" type=\"text\" [value]=\"descricaoCondicaoPagamento\" readonly>\n                        <div class=\"input-group-append\">\n                            <button type=\"button\" class=\"btn btn-primary\" (click)=\"openModal(condpagto)\">\n                                <i class=\"fas fa-search\"></i>\n                            </button>\n                        </div>\n                    </div>\n\n                    <label>Vendedor:</label>\n                    <div class=\"input-group mb-3\">\n                        <input class=\"form-control\" type=\"text\" readonly>\n                    </div>\n\n                    <label>Tabela:</label>\n                    <div class=\"input-group mb-3\">\n                        <input class=\"form-control\" type=\"text\" [value]=\"descricaoTabela\" readonly>\n                        <div class=\"input-group-append\">\n                            <button type=\"button\" class=\"btn btn-primary\" (click)=\"openModal(tabela)\">\n                                <i class=\"fas fa-search\"></i>\n                            </button>\n                        </div>\n                    </div>\n\n                    <label>Observações: *</label>\n                    <div class=\"input-group mb-3\">\n                        <textarea class=\"form-control\" [formControl]=\"observacoes\" type=\"text\"></textarea>\n                    </div>\n\n                </div>\n\n                <div class=\"col-md-6\">\n                    <label>Desconto geral:</label>\n                    <div class=\"input-group mb-3\">\n                        <input class=\"form-control\" type=\"text\" [value]=\"descricaoDesconto\" readonly>\n                        <div class=\"input-group-append\">\n                            <button type=\"button\" class=\"btn btn-primary\" (click)=\"openModal(desconto)\">\n                                <i class=\"fas fa-search\"></i>\n                            </button>\n                        </div>\n                    </div>\n\n                    <label>N da O.C.:</label>\n                    <div class=\"input-group mb-3\">\n                        <input type=\"text\" [formControl]=\"numeroOC\">\n                    </div>\n\n                    <label>Entrega:</label>\n                    <div class=\"input-group mb-3\">\n                        <input type=\"text\" [formControl]=\"dataEntrega\" bsDatepicker [bsConfig]=\"{ isAnimated: true, dateInputFormat: 'YYYY-MM-DD', containerClass:'theme-dark-blue' }\">\n                    </div>\n\n                    <label>Data base Vencimento:</label>\n                    <div class=\"input-group mb-3\">\n                        <input type=\"text\" [formControl]=\"dataBaseVencimento\" bsDatepicker [bsConfig]=\"{ isAnimated: true, dateInputFormat: 'YYYY-MM-DD', containerClass:'theme-dark-blue' }\">\n                    </div>\n\n                    <label>Valor Frete:</label>\n                    <div class=\"input-group mb-3\">\n                        <input type=\"number\" [formControl]=\"valorFrete\">\n                    </div>\n\n                    <label>Valor Desconto:</label>\n                    <div class=\"input-group mb-3\">\n                        <input type=\"number\" [formControl]=\"valorDesconto\">\n                    </div>\n\n                    <label>Valor total:</label>\n                    <div class=\"input-group mb-3\">\n                        <input type=\"number\" [formControl]=\"valorTotal\">\n                    </div>\n                </div>\n            </div>\n            <button class=\"btn-salvar\" (click)=\"salvarPedido()\"><i class=\"far fa-save fa-lg\"></i></button>\n        </form>\n    </div>\n\n    <ng-container *ngIf=\"idPedido != null\">\n        \n        <h1 class=\"h3 mb-2 mt-5\">Tabela pedido</h1>\n\n        <form>\n            <div class=\"input-group mb-3\">\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"openModal(produto)\">\n                    Adicionar itens ao pedido <i class=\"fas fa-search\"></i>\n                </button>\n            </div>\n        </form>\n\n        <div class=\"row mb-5\" *ngIf=\"listaItensPedido.length < 1\">\n            <p>Não há itens cadastrados para este pedido.</p>\n        </div>\n        <div class=\"tabela mb-5\" *ngIf=\"listaItensPedido.length > 0\">\n            <div class=\"table-responsive\">\n\n                <table class=\"table\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">Produto</th>\n                            <th scope=\"col\">Quantidade</th>\n                            <th scope=\"col\">Preço</th>\n                            <th scope=\"col\">Total</th>\n                            <th>Ações</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let item of listaItensPedido\">\n                            <td>{{item.produto + ' - ' + item.descricao}}</td>\n                            <td>{{item.quant}}</td>\n                            <td>{{item.preco}}</td>\n                            <td>{{item.totalitem}}</td>\n                            <td>\n                                <button class=\"btn-deletar\" (click)=\"apagarItemPedido(item.produto)\"><i class=\"far fa-trash-alt fa-md\"></i></button>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n\n    </ng-container>\n\n</div>\n\n<ng-template #cliente>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title pull-left\">Buscar Cliente</h4>\n        <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n    <div class=\"modal-body\">\n        <div class=\"container\">\n            <div class=\"row\">\n                <div class=\"input-group\">\n                    <input class=\"form-control\" type=\"text\" [formControl]=\"buscaCliente\"\n                    placeholder=\"Digite o documento do cliente...\" (keyup.enter)=\"buscarDocumentoCliente()\">\n                    <div class=\"input-group-append\">\n                        <button type=\"button\" class=\"btn btn-primary\" (click)=\"buscarDocumentoCliente()\">\n                            <i class=\"fas fa-search\"></i>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <br>\n            <div class=\"row\" *ngIf=\"listaClientes.length > 0\">\n                <div class=\"table-responsive\">\n                    <table class=\"table table-striped\">\n                        <thead>\n                            <th>CGC</th>\n                            <th>Razão</th>\n                            <th>Fantasia</th>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let cliente of listaClientes\" (click)=\"selecionarCliente(cliente); modalRef.hide();\">\n                                <td>{{cliente.cgc}}</td>\n                                <td>{{cliente.razao}}</td>\n                                <td>{{cliente.fantasia}}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n</ng-template>\n\n\n<ng-template #transportadora>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title pull-left\">Buscar Transportadora</h4>\n        <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n    <div class=\"modal-body\">\n        <div class=\"container\">\n            <div class=\"row\">\n                <div class=\"input-group\">\n                    <input class=\"form-control\" type=\"text\" [formControl]=\"buscaTransportadora\"\n                    placeholder=\"Digite o documento do transportador...\"\n                    (keyup.enter)=\"buscarDocumentoTransportadora()\">\n                    <div class=\"input-group-append\">\n                        <button type=\"button\" class=\"btn btn-primary\" (click)=\"buscarDocumentoTransportadora()\">\n                            <i class=\"fas fa-search\"></i>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <br>\n            <div class=\"row\" *ngIf=\"listaTransportadoras.length > 0\">\n                <div class=\"table-responsive\">\n                    <table class=\"table table-striped\">\n                        <thead>\n                            <th>CGC</th>\n                            <th>Razão</th>\n                            <th>Fantasia</th>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let transportadora of listaTransportadoras\" (click)=\"selecionarTransportadora(transportadora); modalRef.hide();\">\n                                <td>{{transportadora.cgc}}</td>\n                                <td>{{transportadora.razao}}</td>\n                                <td>{{transportadora.fantasia}}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n</ng-template>\n\n\n<ng-template #condpagto>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title pull-left\">Buscar Condição de Pagamento</h4>\n        <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n    <div class=\"modal-body\">\n        <div class=\"container\">\n            <div class=\"row\">\n                <div class=\"input-group\">\n                    <input class=\"form-control\" type=\"text\" [formControl]=\"buscaCondPagto\"\n                    placeholder=\"Digite a descrição da condição de pagamento...\"\n                    (keyup.enter)=\"buscarCondicaoPagamento()\">\n                    <div class=\"input-group-append\">\n                        <button type=\"button\" class=\"btn btn-primary\" (click)=\"buscarCondicaoPagamento()\">\n                            <i class=\"fas fa-search\"></i>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <br>\n            <div class=\"row\" *ngIf=\"listaCondPagto.length > 0\">\n                <div class=\"table-responsive\">\n                    <table class=\"table table-striped\">\n                        <thead>\n                            <th>Código</th>\n                            <th>Descrição</th>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let cond of listaCondPagto\" (click)=\"selecionarCondPagto(cond); modalRef.hide();\">\n                                <td>{{cond.codigo}}</td>\n                                <td>{{cond.descricao}}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n</ng-template>\n\n\n<ng-template #desconto>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title pull-left\">Buscar Desconto</h4>\n        <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n    <div class=\"modal-body\">\n        <div class=\"container\">\n            <div class=\"row\">\n                <div class=\"input-group\">\n                    <input class=\"form-control\" type=\"text\" [formControl]=\"buscaDesconto\"\n                    placeholder=\"Digite a descrição do desconto...\" (keyup.enter)=\"buscarDesconto()\">\n                    <div class=\"input-group-append\">\n                        <button type=\"button\" class=\"btn btn-primary\" (click)=\"buscarDesconto()\">\n                            <i class=\"fas fa-search\"></i>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <br>\n            <div class=\"row\" *ngIf=\"listaDesconto.length > 0\">\n                <div class=\"table-responsive\">\n                    <table class=\"table table-striped\">\n                        <thead>\n                            <th>Código</th>\n                            <th>Descrição</th>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let desconto of listaDesconto\" (click)=\"selecionarDesconto(desconto); modalRef.hide();\">\n                                <td>{{desconto.codigo_desconto}}</td>\n                                <td>{{desconto.descricao_desconto}}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n</ng-template>\n\n<ng-template #tabela>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title pull-left\">Buscar Tabela</h4>\n        <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n    <div class=\"modal-body\">\n        <div class=\"container\">\n            <div class=\"row\">\n                <div class=\"input-group\">\n                    <input class=\"form-control\" type=\"text\" [formControl]=\"buscaTabela\"\n                    placeholder=\"Digite o código da Tabela...\" (keyup.enter)=\"buscarTabelaPreco()\">\n                    <div class=\"input-group-append\">\n                        <button type=\"button\" class=\"btn btn-primary\" (click)=\"buscarTabelaPreco()\">\n                            <i class=\"fas fa-search\"></i>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <br>\n            <div class=\"row\" *ngIf=\"listaTabela.length > 0\">\n                <div class=\"table-responsive\">\n                    <table class=\"table table-striped\">\n                        <thead>\n                            <th>Código</th>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let tabela of listaTabela\">\n                                <td (click)=\"selecionarTabela(tabela); modalRef.hide()\">{{tabela.id}}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n</ng-template>\n\n\n<ng-template #produto>\n    <div class=\"modal-lg\">\n\n        <div class=\"modal-header\">\n            <h4 class=\"modal-title pull-left\">Buscar Produto</h4>\n            <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n                <span aria-hidden=\"true\">&times;</span>\n            </button>\n        </div>\n        <div class=\"modal-body\">\n            <div class=\"container\">\n                <div class=\"row\">\n                    <div class=\"input-group\">\n                        <input class=\"form-control\" type=\"text\" [formControl]=\"buscaProduto\"\n                        placeholder=\"Digite o código do produto...\" (keyup.enter)=\"buscarProduto()\">\n                        <div class=\"input-group-append\">\n                            <button type=\"button\" class=\"btn btn-primary\" (click)=\"buscarProduto()\">\n                                <i class=\"fas fa-search\"></i>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <br>\n                <div class=\"row\" *ngIf=\"listaProdutos.length > 0\">\n                    <div class=\"table-responsive\">\n                        <table class=\"table table-striped\">\n                            <thead>\n                                <th></th>\n                                <th>Código</th>\n                                <th>Descrição</th>\n                                <th>Preço</th>\n                                <th>Qtd.</th>\n                                <th>Ações</th>\n                            </thead>\n                            <tbody>\n                                <tr *ngFor=\"let produto of listaProdutos\">\n                                    <td><img [src]=produto.url width=\"35\"></td>\n                                    <td>{{produto.produto}}</td>\n                                    <td>{{produto.descricao}}</td>\n                                    <td>R$ {{produto.preco}}</td>\n                                    <td><input class=\"form-control input-table col-md-2\" [id]=\"produto.produto\" type=\"number\" placeholder=\"0\" min=\"1\">\n                                    </td>\n                                    <td>\n                                        <button class=\"btn btn-success\" (click)=\"salvarItemPedido(produto.produto); modalRef.hide();\"><i class=\"far fa-save fa-sm\"></i></button>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</ng-template>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './helpers/auth-guard';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { PedidosListagemComponent } from './pedidos-listagem/pedidos-listagem.component';\nimport { PedidosComponent } from './pedidos/pedidos.component';\nimport { ProdutosComponent } from './produtos/produtos.component';\nimport { ServicesModule } from './services/services.module';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent, canActivate: [AuthGuard] },\n  { path: 'pedidos', component: PedidosComponent, canActivate: [AuthGuard] },\n  { path: 'pedidos-listagem', component: PedidosListagemComponent, canActivate: [AuthGuard] },\n  { path: 'produtos', component: ProdutosComponent, canActivate: [AuthGuard] },\n  { path: 'login', component: LoginComponent },\n  { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes),\n    ServicesModule\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\nimport { AlertService } from '../services/alert.service';\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authenticationService: AuthenticationService,\n    private alertService: AlertService) {\n\n    // redirect to home if already logged in\n    if (this.authenticationService.currentUserValue) {\n      this.router.navigate(['/']);\n    }\n\n  }\n\n  ngOnInit(): void {\n\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n\n    // get return url from route parameters or default to '/'\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n\n  }\n\n  get f() { return this.loginForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n\n    // reset alerts on submit\n    this.alertService.clear();\n\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n    this.authenticationService.login(this.f.username.value, this.f.password.value)\n      .pipe(first())\n      .subscribe(\n        data => {\n          this.router.navigate([this.returnUrl]);\n        },\n        error => {\n          this.alertService.error(error);\n          this.loading = false;\n        });\n  }\n\n}\n","<div class=\"d-flex h-100 w-100 all\">\n    <div class=\"d-flex justify-content-center w-100 h-100\">\n        <div class=\"user_card\">\n            <div class=\"d-flex justify-content-center\">\n                <div class=\"brand_logo_container\">\n                    <img src=\"https://scontent.fgru17-1.fna.fbcdn.net/v/t1.6435-9/89831110_2564480087173348_3120474309559058432_n.png?_nc_cat=106&ccb=1-3&_nc_sid=973b4a&_nc_ohc=9QrTc51HhWEAX90pnKl&_nc_ht=scontent.fgru17-1.fna&oh=bd0af2fc738dd5db356555b633717810&oe=60917BC7\"\n                        class=\"brand_logo\" alt=\"Logo\">\n                </div>\n            </div>\n            <div class=\"d-flex justify-content-center form_container\">\n                <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n                    <div class=\"input-group mb-3\">\n                        <div class=\"input-group-append\">\n                            <span class=\"input-group-text\"><i class=\"fas fa-user\"></i></span>\n                        </div>\n                        <input type=\"text\" formControlName=\"username\" class=\"form-control input_user\"\n                            [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" placeholder=\"Usuário\">\n                        <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.username.errors.required\">Usuário é obrigatório</div>\n                        </div>\n                    </div>\n                    <div class=\"input-group mb-2\">\n                        <div class=\"input-group-append\">\n                            <span class=\"input-group-text\"><i class=\"fas fa-key\"></i></span>\n                        </div>\n                        <input type=\"password\" formControlName=\"password\" class=\"form-control input_pass\"\n                            [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" placeholder=\"Senha\">\n                        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.password.errors.required\">Senha é obrigatória</div>\n                        </div>\n                    </div>\n                    <div class=\"d-flex justify-content-center mt-3 login_container\">\n                        <button type=\"submit\" name=\"button\" [disabled]=\"loading\" class=\"btn login_btn\">\n                            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                            Entrar\n                        </button>\n                    </div>\n                </form>\n            </div>\n\n            <div class=\"mt-4\">\n                <div class=\"d-flex justify-content-center links\">\n                    Não tem uma conta? <a href=\"#\" class=\"ml-2\">Cadastre-se</a>\n                </div>\n                <div class=\"d-flex justify-content-center links\">\n                    <a href=\"#\">Esqueceu a senha?</a>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TransportadoraService {\n\n  constructor(private http: HttpClient) { }\n\n  buscarDocumentoPorFantasia(doc: string) {\n    if(doc == null || doc == '' || doc == undefined) {\n      return this.http.get(`${environment.apiUrl}/transportadora`);\n    }\n    return this.http.get(`${environment.apiUrl}/transportadora?fantasia=${doc}`);\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}